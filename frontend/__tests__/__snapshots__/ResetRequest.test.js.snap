// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ResetRequest/> calls the mutation 1`] = `
<ResetRequest>
  <Mutation
    mutation={
      Object {
        "definitions": Array [
          Object {
            "directives": Array [],
            "kind": "OperationDefinition",
            "name": Object {
              "kind": "Name",
              "value": "requestReset",
            },
            "operation": "mutation",
            "selectionSet": Object {
              "kind": "SelectionSet",
              "selections": Array [
                Object {
                  "alias": undefined,
                  "arguments": Array [
                    Object {
                      "kind": "Argument",
                      "name": Object {
                        "kind": "Name",
                        "value": "email",
                      },
                      "value": Object {
                        "kind": "Variable",
                        "name": Object {
                          "kind": "Name",
                          "value": "email",
                        },
                      },
                    },
                  ],
                  "directives": Array [],
                  "kind": "Field",
                  "name": Object {
                    "kind": "Name",
                    "value": "requestReset",
                  },
                  "selectionSet": Object {
                    "kind": "SelectionSet",
                    "selections": Array [
                      Object {
                        "alias": undefined,
                        "arguments": Array [],
                        "directives": Array [],
                        "kind": "Field",
                        "name": Object {
                          "kind": "Name",
                          "value": "id",
                        },
                        "selectionSet": undefined,
                      },
                    ],
                  },
                },
              ],
            },
            "variableDefinitions": Array [
              Object {
                "defaultValue": undefined,
                "kind": "VariableDefinition",
                "type": Object {
                  "kind": "NonNullType",
                  "type": Object {
                    "kind": "NamedType",
                    "name": Object {
                      "kind": "Name",
                      "value": "String",
                    },
                  },
                },
                "variable": Object {
                  "kind": "Variable",
                  "name": Object {
                    "kind": "Name",
                    "value": "email",
                  },
                },
              },
            ],
          },
        ],
        "kind": "Document",
        "loc": Object {
          "end": 97,
          "start": 0,
        },
      }
    }
    variables={
      Object {
        "email": "wesbos@gmail.com",
      }
    }
  >
    <Form
      data-test="ResetRequest"
      onSubmit={[Function]}
    >
      <form
        className="sc-bdVaJa LHejR"
        data-test="ResetRequest"
        onSubmit={[Function]}
      >
        <DisplayError />
        <fieldset
          aria-busy={true}
          disabled={true}
        >
          <label
            htmlFor="email"
          >
            Email
            <input
              name="email"
              onChange={[Function]}
              placeholder="email"
              type="text"
              value="wesbos@gmail.com"
            />
          </label>
          <button
            type="submit"
          >
            Request Reset!
          </button>
        </fieldset>
      </form>
    </Form>
  </Mutation>
</ResetRequest>
`;

exports[`<ResetRequest/> renders and matches snapshot 1`] = `
<Form
  data-test="ResetRequest"
  onSubmit={[Function]}
>
  <form
    className="sc-bdVaJa LHejR"
    data-test="ResetRequest"
    onSubmit={[Function]}
  >
    <DisplayError />
    <fieldset
      aria-busy={false}
      disabled={false}
    >
      <label
        htmlFor="email"
      >
        Email
        <input
          name="email"
          onChange={[Function]}
          placeholder="email"
          type="text"
          value=""
        />
      </label>
      <button
        type="submit"
      >
        Request Reset!
      </button>
    </fieldset>
  </form>
</Form>
`;

exports[`<ResetRequest/> renders errors 1`] = `
<DisplayError
  error={
    Object {
      "message": "Shit!",
    }
  }
>
  <styled.div>
    <div
      className="sc-bwzfXH flKeYn"
    >
      <p>
        <strong>
          Shoot!
        </strong>
        Shit!
        <button>
          Try Again
        </button>
      </p>
    </div>
  </styled.div>
</DisplayError>
`;

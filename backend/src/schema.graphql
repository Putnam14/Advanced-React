# import Permission, Order, OrderItem, CartItem, ItemWhereInput, ItemOrderByInput, allItems, Item, ItemCreateInput, ItemOrderByInput, ItemWhereInput, Query.orders, Query.users from './generated/prisma.graphql'

type Query {
  me: User
  itemsConnection(
    where: ItemWhereInput
    orderBy: ItemOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): ItemConnection!
  items(
    where: ItemWhereInput
    orderBy: ItemOrderByInput
    skip: Int
    first: Int
  ): [Item]!
  order(id: ID!): Order!
}

# import Mutation from './generated/prisma.graphql'

type Mutation {
  signup(email: String!, password: String!, name: String!): AuthPayload!
  signin(email: String!, password: String!): AuthPayload!
  requestReset(email: String!): User
  resetPassword(resetToken: String!, password: String!, confirmPassword: String!): AuthPayload!
  createItem(title: String, description: String, price: Int, image: String, largeImage: String): Item!
  deleteItem(id: ID!): Item!
  updateItem(id: ID!, title: String, description: String, price: Int): Item!
  addToCart(id: ID!): CartItem
  removeFromCart(id: ID!): CartItem
  createOrder(token: String!): Order!
  updateUser(name: String): User
  updatePermissions(permissions: [Permission], userId: ID!): User
}

input UserInput {
  name: String
}

type AuthPayload {
  token: String!
  user: User!
}

type User {
  id: ID!
  email: String!
  name: String!
  orders: [Order!]!
  cart: [CartItem!]!
  permissions: [Permission]!
}
